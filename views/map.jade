extends layout

block content
    #map
    script(src="/socket.io/socket.io.js")
    script.

        var socket = io.connect('http://localhost:2999');
        socket.on('news', function(data) {
            console.log('data in: ' + JSON.stringify(data));
            //socket.emit('my other event', {my: 'data'});
            //socket.emit('position_request', "true");
            updateMarker(data);    
        });

        socket.emit('position_request', "true");

        // Create variable to hold map element, give initial settings to map
        var map = L.map('map',{ center: [-21.18, -47.80], zoom: 15, closePopupOnClick: false});
        // Add OpenStreetMap tile layer to map element
        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoicGVnb3JmIiwiYSI6ImNqNDVxZ2l0eTFzNnYzOW9iejJ4Z3F0ZmgifQ.AOG2N-LlgVYcPdpOdGWhxQ', { id: 'mapbox.streets', maxZoom: 18, minZoom: 1, attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> , ' +
        'Imagery Â© <a href="http://mapbox.com">Mapbox</a>' + ' - <a>Grupo Ribeirania 2017</a>', id: 'mapbox.streets' 
        }).addTo(map);

        //var marker1 = L.marker("-10", "-10").addTo(map);
        //L.marker([-21.18, -47.80]).addTo(map);

        var marker1 = "undefined";
        var marker2 = "undefined";

        function updateMarker(_coords) {
            if(typeof _coords != "undefined") {
                var obj = JSON.parse(JSON.stringify(_coords));

                //STRADA UPDATE
                if(obj.hasOwnProperty("coords_strada") && (Number(JSON.stringify(obj.coords_strada)) != 0)) {
                    console.log('obj.coords_strada: ' + JSON.stringify(obj.coords_strada));

                    var coords = [Number(JSON.stringify(obj.coords_strada[1])), Number(JSON.stringify(obj.coords_strada[0]))]; 

                    if(marker1 != "undefined") {
                        circle1 = L.circleMarker(marker1.getLatLng(), {'radius' : 5});
                        circle1.addTo(map);
                        marker1.setLatLng(coords);
                    }
                    else {
                        marker1 = L.marker(coords, {autoclose: true});
                        marker1.addTo(map);
                        marker1.bindPopup("<b>Strada</b>").openPopup();
                    }
                }

                //FIORINO UPDATE
                var greenIcon = new L.Icon({
                  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
                  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                  iconSize: [25, 41],
                  iconAnchor: [12, 41],
                  popupAnchor: [1, -34],
                  shadowSize: [41, 41]
                });
                if(obj.hasOwnProperty("coords_fiorino") && (Number(JSON.stringify(obj.coords_fiorino)) != 0)) {
                    console.log('obj.coords_fiorino: ' + JSON.stringify(obj.coords_fiorino));

                    var coords = [Number(JSON.stringify(obj.coords_fiorino[1])), Number(JSON.stringify(obj.coords_fiorino[0]))]; 

                    if(marker2 != "undefined") {
                        circle1 = L.circleMarker(marker2.getLatLng(), {'radius' : 5, 'color' : '#0B610B' });
                        circle1.addTo(map);
                        marker2.setLatLng(coords);
                    }
                    else {
                        marker2 = L.marker(coords, {autoclose: true, icon: greenIcon});
                        marker2.addTo(map);
                        marker2.bindPopup("<b>Fiorino</b>").openPopup();
                    }
                }
            }


            if (marker1 == 'undefined') {
                socket.emit('position_request', "true");
            }
        }

        // Add JSON to map
//        L.geoJson(myData,{
//            onEachFeature: function (feature, layer) {
//                layer.bindPopup(feature.properties.f2);
//            }
//        }).addTo(map);
